---
# ConfigMap for PostgreSQL custom configurations (postgresql.conf and pg_hba.conf)
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: postgresql  # Set to 'postgresql' namespace
  labels:
    app: postgres
data:
  postgresql.conf: |
    # Listen on all interfaces
    listen_addresses = '*'
    # Optionally change other settings like max_connections, shared_buffers, etc.

  pg_hba.conf: |
    # Allow all IPs to connect
    host    all             all             0.0.0.0/0            md5
    host    all             all             ::/0                 md5
---
# ConfigMap for PostgreSQL credentials (username, password, and database)
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-secret
  namespace: postgresql  # Set to 'postgresql' namespace
  labels:
    app: postgres
data:
  POSTGRES_DB: ps_db
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: mars_postgresql
---
# Persistent Volume definition with generic name
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-volume
  namespace: postgresql  # Set to 'postgresql' namespace
  labels:
    type: local
    app: postgres
spec:
  storageClassName: default
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /data/postgresql
---
# Persistent Volume Claim definition with generic name
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-volume-claim
  namespace: postgresql  # Set to 'postgresql' namespace
  labels:
    app: postgres
spec:
  storageClassName: default
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
# Deployment for PostgreSQL (generic name)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: postgresql  # Set to 'postgresql' namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      imagePullSecrets:
        - name: acr-secret
      containers:
        - name: postgres
          image: litmus.azurecr.io/postgres:12
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-secret  # Reference updated to postgres-secret
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
            - mountPath: /etc/postgresql/postgresql.conf
              name: postgres-config
              subPath: postgresql.conf
            - mountPath: /etc/postgresql/pg_hba.conf
              name: postgres-config
              subPath: pg_hba.conf
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: postgres-volume-claim
        - name: postgres-config
          configMap:
            name: postgres-config
---
# Service definition for PostgreSQL with internal LoadBalancer for Azure
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: postgresql  # Set to 'postgresql' namespace
  labels:
    app: postgres
  annotations:
    # For Azure, this annotation ensures the LoadBalancer is internal
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  ports:
    - port: 5432
  selector:
    app: postgres
