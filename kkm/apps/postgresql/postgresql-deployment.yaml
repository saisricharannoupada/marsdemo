---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: azurefile-csi-nfs
  namespace: kkm
provisioner: file.csi.azure.com
allowVolumeExpansion: true
parameters:
  protocol: nfs
mountOptions:
  - nconnect=4
  - noresvport
  - actimeo=30
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: kkm
  labels:
    app: postgres
data:
  POSTGRES_DB: postgresql
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: mars_postgresql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-volume
  namespace: kkm
  labels:
    app: postgres
spec:
  storageClassName: azurefile-csi-nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 30Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: kkm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      initContainers:
        - name: init
          image: alpine
          command: ["sh", "-c", "chown -R 999:1000 /var/lib/postgresql/data"]
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      containers:
        - name: postgres
          image: postgres:12.20
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-volume
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: kkm
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
